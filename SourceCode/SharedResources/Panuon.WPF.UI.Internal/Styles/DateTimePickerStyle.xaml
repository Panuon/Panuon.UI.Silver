<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Styles/ButtonStyle.xaml" />
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Templates/DateTimePickerTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=ClearButtonStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="{Binding Foreground, Converter={StaticResource {x:Static irs:ConverterKeys.LightenSolidColorBrushConverter}}, ConverterParameter=0.6, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="{x:Null}" />
        <Setter Property="local:ButtonHelper.ClickBackground"
                Value="{x:Null}" />
        <Setter Property="FontFamily"
                Value="/Panuon.WPF.UI;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Margin"
                Value="0,0,5,0" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
    </Style>
    
    <Style x:Key="{ComponentResourceKey ResourceId=ToggleArrowTransformControlStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}"
           TargetType="local:TransformControl">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="/Panuon.WPF.UI;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="Content"
                Value="&#xe903;" />
        <Setter Property="Padding"
                Value="4,0,8,0" />
        <Setter Property="AnimationDuration"
                Value="0:0:0.15" />
        <Setter Property="Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Mode=OneWay}"
                         Value="True">
                <Setter Property="ScaleY"
                        Value="-1" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=CalendarXStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}"
           TargetType="local:CalendarX">
        <Setter Property="Width"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="NaN" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ItemsForeground"
                Value="{Binding ItemsForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBackground"
                Value="{Binding ItemsBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBorderBrush"
                Value="{Binding ItemsBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBorderThickness"
                Value="{Binding ItemsBorderThickness, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCornerRadius"
                Value="{Binding ItemsCornerRadius, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsShadowColor"
                Value="{Binding ItemsShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverBackground"
                Value="{Binding ItemsHoverBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverForeground"
                Value="{Binding ItemsHoverForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverBorderBrush"
                Value="{Binding ItemsHoverBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverShadowColor"
                Value="{Binding ItemsHoverShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBackground"
                Value="{Binding ItemsCheckedBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedForeground"
                Value="{Binding ItemsCheckedForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBorderBrush"
                Value="{Binding ItemsCheckedBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBorderThickness"
                Value="{Binding ItemsCheckedBorderThickness, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedShadowColor"
                Value="{Binding ItemsCheckedShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsSpecialDayHighlightTemplate"
                Value="{Binding ItemsSpecialDayHighlightTemplate, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=TimeSelectorStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}"
           TargetType="local:TimeSelector">
        <Setter Property="Width"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="NaN" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ItemsForeground"
                Value="{Binding ItemsForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBackground"
                Value="{Binding ItemsBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBorderBrush"
                Value="{Binding ItemsBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsBorderThickness"
                Value="{Binding ItemsBorderThickness, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCornerRadius"
                Value="{Binding ItemsCornerRadius, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsShadowColor"
                Value="{Binding ItemsShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverBackground"
                Value="{Binding ItemsHoverBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverForeground"
                Value="{Binding ItemsHoverForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverBorderBrush"
                Value="{Binding ItemsHoverBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsHoverShadowColor"
                Value="{Binding ItemsHoverShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBackground"
                Value="{Binding ItemsCheckedBackground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedForeground"
                Value="{Binding ItemsCheckedForeground, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBorderBrush"
                Value="{Binding ItemsCheckedBorderBrush, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedBorderThickness"
                Value="{Binding ItemsCheckedBorderThickness, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
        <Setter Property="ItemsCheckedShadowColor"
                Value="{Binding ItemsCheckedShadowColor, RelativeSource={RelativeSource AncestorType=local:DateTimePicker}, Mode=OneWay}" />
    </Style>

    <Style x:Key="{x:Static rs:StyleKeys.DateTimePickerStyle}"
           TargetType="local:DateTimePicker">
        <Setter Property="i:VisualStateHelper.Regist"
                Value="True" />
        <Setter Property="i:VisualStateHelper.IsHover"
                Value="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="i:VisualStateHelper.IsFocused"
                Value="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding IconFontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding IconFontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="10,0,0,0" />
        <Setter Property="local:IconHelper.VerticalAlignment"
                Value="Center" />
        <Setter Property="local:IconHelper.HorizontalAlignment"
                Value="Left" />
        <Setter Property="local:DropDownHelper.CornerRadius"
                Value="{Binding CornerRadius, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.Background"
                Value="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.BorderBrush"
                Value="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.BorderThickness"
                Value="{Binding BorderThickness, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.MinWidth"
                Value="250" />
        <Setter Property="local:DropDownHelper.Height"
                Value="250" />
        <Setter Property="local:DropDownHelper.Placement"
                Value="BottomRight" />
        <Setter Property="local:DropDownHelper.ShadowColor"
                Value="#EAEAEA" />
        <Setter Property="CalendarXStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=CalendarXStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}}" />
        <Setter Property="TimeSelectorStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=TimeSelectorStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}}" />
        <Setter Property="ToggleArrowTransformControlStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ToggleArrowTransformControlStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}}" />
        <Setter Property="ClearButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ClearButtonStyle, TypeInTargetAssembly={x:Type local:DateTimePicker}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="DateTimeSeparatorBrush"
                Value="LightGray" />
        <Setter Property="DateTimeSeparatorThickness"
                Value="1" />
        <Setter Property="DateTimeSeparatorVisibility"
                Value="Visible" />
        <Setter Property="DefaultDateTime"
                Value="{Binding SelectedDateTime, RelativeSource={RelativeSource Self}, Mode=OneTime}" />
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="WatermarkForeground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), Converter={StaticResource {x:Static irs:ConverterKeys.BrushOpacityConverter}}, ConverterParameter=0.8, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="ItemsForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="ItemsHoverBackground"
                Value="#F1F1F1" />
        <Setter Property="ItemsCheckedBackground"
                Value="#EAEAEA" />
        <Setter Property="ItemsBackground"
                Value="Transparent" />
        <Setter Property="ItemsBorderThickness"
                Value="0" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.DateTimePickerTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding FocusedBorderBrush, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderBrushLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding FocusedBackground, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBackgroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding FocusedForeground, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverForegroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding FocusedShadowColor, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverShadowColorLock"
                        Value="True" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>
