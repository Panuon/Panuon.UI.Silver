<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources"
                    xmlns:its="clr-namespace:Panuon.WPF.UI.Internal.TemplateSelectors">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TextBoxTemplate}"
                     TargetType="TextBox">
        <ControlTemplate.Resources>
            <its:WatermarkTemplateSelector x:Key="WatermarkTemplateSelector"/>
        </ControlTemplate.Resources>
        <Border x:Name="BdrContainer"
                Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <DockPanel x:Name="DockContainer"
                       TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <i:IconPresenter x:Name="IpIcon"
                                 Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 Content="{Binding Path=(local:TextBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Grid>
                    <Border Margin="{TemplateBinding Padding}">
                        <ContentControl Margin="2,0,0,0"
                                        IsHitTestVisible="False"
                                        Focusable="False"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Visibility="{Binding Text,Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                        Content="{Binding Path=(local:TextBoxHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                        ContentTemplateSelector="{StaticResource WatermarkTemplateSelector}"
                                        Foreground="{Binding Path=(i:VisualStateHelper.WatermarkForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    </Border>
                    <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                  HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                </Grid>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TextBoxClearableTemplate}"
                     TargetType="TextBox">
        <ControlTemplate.Resources>
            <its:WatermarkTemplateSelector x:Key="WatermarkTemplateSelector" />
        </ControlTemplate.Resources>
        <Border x:Name="BdrContainer"
                Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <DockPanel x:Name="DockContainer"
                       TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <i:IconPresenter x:Name="IpIcon"
                                 Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 Content="{Binding Path=(local:TextBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Margin="{TemplateBinding Padding}">
                        <ContentControl Margin="2,0,0,0"
                                        IsHitTestVisible="False"
                                        Focusable="False"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Visibility="{Binding Text,Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                        Content="{Binding Path=(local:TextBoxHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                        ContentTemplateSelector="{StaticResource WatermarkTemplateSelector}"
                                        Foreground="{Binding Path=(i:VisualStateHelper.WatermarkForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    </Border>
                    <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                  HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                    <Button x:Name="BtnClear"
                            Grid.Column="1"
                            Visibility="Collapsed"
                            Style="{Binding Path=(local:TextBoxHelper.ClearButtonStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Command="{Binding Path=(local:TextBoxHelper.ClearCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger  Property="local:TextBoxHelper.ClearButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TextBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
