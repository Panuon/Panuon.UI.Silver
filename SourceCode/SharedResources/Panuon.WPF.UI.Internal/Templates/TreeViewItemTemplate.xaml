<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TreeViewItemTemplate}"
                     TargetType="TreeViewItem">
        <StackPanel>
            <local:ContentControlX x:Name="CcMain"
                                   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Height="{Binding Path=(local:TreeViewItemHelper.Height), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Icon="{Binding Path=(local:TreeViewItemHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   IconWidth="{Binding Path=(local:TreeViewHelper.ItemsIconWidth), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                                   CornerRadius="{Binding Path=(local:TreeViewItemHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Padding="{Binding Path=(local:TreeViewItemHelper.InternalPadding), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <local:ContentControlX.ExtendControl>
                    <ToggleButton x:Name="TgbToggle"
                                  IsChecked="True"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Style="{Binding Path=(local:TreeViewHelper.ToggleArrowToggleButtonStyle), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                                  Visibility="Hidden" />
                </local:ContentControlX.ExtendControl>
                <Grid>
                    <ContentPresenter x:Name="CpHeader"
                                      ContentSource="Header"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    <Rectangle x:Name="SprtHorizontal"
                               Visibility="Collapsed"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Stroke="{Binding Path=(local:TreeViewItemHelper.RulerLineBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               StrokeThickness="{Binding Path=(local:TreeViewItemHelper.RulerLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               StrokeDashArray="{Binding Path=(local:TreeViewItemHelper.RulerLineDashArray), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <Rectangle.Width>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.TreeViewItemHorizontalSeparatorWidthConverter}}">
                                <Binding Path="(local:TreeViewHelper.ToggleArrowPlacement)"
                                         RelativeSource="{RelativeSource AncestorType=TreeView}"
                                         Mode="OneWay" />
                                <Binding Path="Padding"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="ActualWidth"
                                         ElementName="TgbToggle"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Rectangle.Width>
                        <Rectangle.Margin>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.TreeViewItemHorizontalSeparatorMarginConverter}}">
                                <Binding Path="(local:TreeViewHelper.ToggleArrowPlacement)"
                                         RelativeSource="{RelativeSource AncestorType=TreeView}"
                                         Mode="OneWay" />
                                <Binding Path="BorderThickness"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:TreeViewItemHelper.InternalPadding)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="Padding"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="ActualWidth"
                                         ElementName="TgbToggle"
                                         Mode="OneWay" />
                                <Binding Path="(local:TreeViewItemHelper.RulerLineThickness)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Rectangle.Margin>
                    </Rectangle>
                </Grid>
            </local:ContentControlX>
            <Rectangle x:Name="RectSeparator"
                       VerticalAlignment="Center"
                       Fill="{Binding Path=(local:TreeViewItemHelper.SeparatorBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Height="{Binding Path=(local:TreeViewItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Margin="{Binding Path=(local:TreeViewItemHelper.SeparatorMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Visibility="{Binding Path=(local:TreeViewItemHelper.SeparatorVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Grid x:Name="GrdItems"
                  Visibility="Collapsed">
                <ItemsPresenter x:Name="ItemsHost" />
                <Rectangle x:Name="SprtVertical"
                           Visibility="Collapsed"
                           HorizontalAlignment="Left"
                           Stroke="{Binding Path=(local:TreeViewItemHelper.RulerLineBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           StrokeThickness="{Binding Path=(local:TreeViewItemHelper.RulerLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           StrokeDashArray="{Binding Path=(local:TreeViewItemHelper.RulerLineDashArray), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.TreeViewItemVerticalSeparatorMarginConverter}}">
                            <Binding Path="(local:TreeViewHelper.ToggleArrowPlacement)"
                                     RelativeSource="{RelativeSource AncestorType=TreeView}"
                                     Mode="OneWay" />
                            <Binding Path="BorderThickness"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="(local:TreeViewItemHelper.InternalPadding)"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="Padding"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     ElementName="TgbToggle"
                                     Mode="OneWay" />
                            <Binding Path="(local:TreeViewItemHelper.Height)"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Rectangle.Margin>
                </Rectangle>
            </Grid>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger SourceName="CcMain"
                     Property="IsMouseOver"
                     Value="True">
                <Setter Property="local:TreeViewItemHelper.IsMouseDirectlyOver"
                        Value="True" />
            </Trigger>
            <Trigger Property="local:TreeViewItemHelper.RulerLineVisiblity"
                     Value="Vertical">
                <Setter TargetName="SprtVertical"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="local:TreeViewItemHelper.RulerLineVisiblity"
                     Value="Both">
                <Setter TargetName="SprtVertical"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(local:TreeViewHelper.ToggleArrowPlacement), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                         Value="Right">
                <Setter TargetName="CcMain"
                        Property="ExtendControlPlaceRight"
                        Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.RulerLineVisiblity), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:TreeViewHelper.ToggleArrowPlacement), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                               Value="Left" />
                    <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding ., Converter={StaticResource {x:Static irs:ConverterKeys.IsTypeConverter}}, ConverterParameter=TreeViewItem, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SprtHorizontal"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.RulerLineVisiblity), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:TreeViewHelper.ToggleArrowPlacement), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                               Value="Right" />
                    <Condition Binding="{Binding ., Converter={StaticResource {x:Static irs:ConverterKeys.IsTypeConverter}}, ConverterParameter=TreeViewItem, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SprtHorizontal"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.RulerLineVisiblity), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Both" />
                    <Condition Binding="{Binding Path=(local:TreeViewHelper.ToggleArrowPlacement), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                               Value="Left" />
                    <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding ., Converter={StaticResource {x:Static irs:ConverterKeys.IsTypeConverter}}, ConverterParameter=TreeViewItem, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SprtHorizontal"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.RulerLineVisiblity), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Both" />
                    <Condition Binding="{Binding Path=(local:TreeViewHelper.ToggleArrowPlacement), RelativeSource={RelativeSource AncestorType=TreeView}, Mode=OneWay}"
                               Value="Right" />
                    <Condition Binding="{Binding ., Converter={StaticResource {x:Static irs:ConverterKeys.IsTypeConverter}}, ConverterParameter=TreeViewItem, RelativeSource={RelativeSource AncestorType=ItemsControl}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SprtHorizontal"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasItems"
                               Value="True" />
                    <Condition Property="IsExpanded"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="GrdItems"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.SelectedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:TreeViewItemHelper.SelectedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.SelectedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Background"
                        Value="{Binding Path=(local:TreeViewItemHelper.SelectedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.SelectedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Foreground"
                        Value="{Binding Path=(local:TreeViewItemHelper.SelectedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CcMain"
                        Property="IconForeground"
                        Value="{Binding Path=(local:TreeViewItemHelper.SelectedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TreeViewItemHelper.SelectedBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:TreeViewItemHelper.SelectedBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="HasItems"
                     Value="True">
                <Setter TargetName="TgbToggle"
                        Property="IsChecked"
                        Value="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                <Setter TargetName="TgbToggle"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IsItemSeparatorShallVisibleControlConverter}}">
                        <Binding Path="."
                                 RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                        <Binding Path="."
                                 RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="RectSeparator"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TreeViewItemStylelessTemplate}"
                     TargetType="TreeViewItem">
        <Grid IsHitTestVisible="False">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentPresenter ContentSource="Header"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
            <Rectangle x:Name="RectSeparator"
                       Fill="{Binding Path=(local:TreeViewItemHelper.SeparatorBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Height="{Binding Path=(local:TreeViewItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Margin="{Binding Path=(local:TreeViewItemHelper.SeparatorMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Visibility="{Binding Path=(local:TreeViewItemHelper.SeparatorVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IsItemSeparatorShallVisibleControlConverter}}">
                        <Binding Path="."
                                 RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                        <Binding Path="."
                                 RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="RectSeparator"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
