<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.SwitchTemplate}"
                     TargetType="local:Switch">
        <Border Background="Transparent">
            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="GrdBox"
                      Height="{TemplateBinding BoxHeight}"
                      Width="{TemplateBinding BoxWidth}">
                    <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{TemplateBinding CheckedBackground}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleBoxBack"
                                                ScaleX="0"
                                                ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                    </Border>

                    <Border x:Name="BdrBorder"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </Grid>
                <Border x:Name="BdrContainer"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                        HorizontalAlignment="Right">
                    <Border.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.SwitchToggleMarginConverter}}">
                            <Binding Path="BoxWidth"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Border.Margin>
                    <Border x:Name="BdrToggle"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Height="{TemplateBinding ToggleSize}"
                            Width="{TemplateBinding ToggleSize}"
                            CornerRadius="{TemplateBinding ToggleCornerRadius}"
                            Background="{TemplateBinding ToggleBrush}">
                        <Border.Effect>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropShadowEffectWithDepthConverter}}">
                                <Binding Path="InternalToggleShadowColor"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.BlurRadius)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.ShadowDepth)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Direction)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Opacity)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.RenderingBias)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Border.Effect>
                    </Border>
                </Border>
                <ContentPresenter x:Name="CpContent"
                                  Grid.Column="1"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  Margin="{TemplateBinding Padding}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ContentPlacement"
                     Value="Left">
                <Setter TargetName="GrdBox"
                        Property="Grid.Column"
                        Value="2" />
                <Setter TargetName="BdrContainer"
                        Property="Grid.Column"
                        Value="2" />
            </Trigger>
            <Trigger Property="ContentPlacement"
                     Value="Right">
                <Setter TargetName="GrdBox"
                        Property="Grid.Column"
                        Value="0" />
                <Setter TargetName="BdrContainer"
                        Property="Grid.Column"
                        Value="0" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedContent, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding CheckedContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedBorderBrush, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBorder"
                        Property="BorderBrush"
                        Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedBorderThickness, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBorder"
                        Property="BorderThickness"
                        Value="{Binding CheckedBorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedForeground, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding CheckedForeground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding CheckedForeground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedToggleBrush, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrToggle"
                        Property="Background"
                        Value="{Binding CheckedToggleBrush, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding CheckedContent, Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding CheckedContent,RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="BdrContainer"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             To="1"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="BdrContainer"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
