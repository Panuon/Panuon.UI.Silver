<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TabItemTemplate}"
                     TargetType="TabItem">
        <Grid x:Name="GrdMain"
              Margin="{Binding Path=(local:TabItemHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <local:ContentControlX x:Name="CcMain"
                               BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               FontSize="{Binding Path=(local:TabItemHelper.FontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               FontFamily="{Binding Path=(local:TabItemHelper.FontFamily), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Icon="{Binding Path=(local:TabItemHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               IconPlacement="{Binding Path=(local:TabItemHelper.IconPlacement), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               CornerRadius="{Binding Path=(local:TabItemHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               VerticalContentAlignment="{Binding Path=(local:TabItemHelper.VerticalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               HorizontalContentAlignment="{Binding Path=(local:TabItemHelper.HorizontalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                      ContentSource="Header"
                                      VerticalAlignment="{Binding Path=(local:TabItemHelper.VerticalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      HorizontalAlignment="{Binding Path=(local:TabItemHelper.HorizontalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <Button x:Name="BtnRemove"
                            Grid.Column="1"
                            Visibility="Hidden"
                            Style="{Binding Path=(local:TabControlHelper.RemoveButtonStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                            Command="{Binding Path=(local:TabControlHelper.RemoveCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Grid>
            </local:ContentControlX>
            <Border x:Name="BdrRibbon"
                    Background="{Binding Path=(i:VisualStateHelper.RibbonLineBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Margin="{Binding Path=(local:TabItemHelper.RibbonLineMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Visibility="{Binding Path=(local:TabItemHelper.RibbonLineVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    CornerRadius="{Binding Path=(local:TabItemHelper.RibbonLineCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Rectangle x:Name="RectSeparator"
                       Fill="{Binding Path=(local:TabItemHelper.SeparatorBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Width="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Margin="{Binding Path=(local:TabItemHelper.SeparatorMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Visibility="{Binding Path=(local:TabItemHelper.SeparatorVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.RowSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="NaN" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.RowSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="NaN" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="NaN" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="NaN" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="local:TabItemHelper.RibbonLinePlacement"
                     Value="Left">
                <Setter TargetName="BdrRibbon"
                        Property="HorizontalAlignment"
                        Value="Left" />
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.RibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="local:TabItemHelper.RibbonLinePlacement"
                     Value="Top">
                <Setter TargetName="BdrRibbon"
                        Property="VerticalAlignment"
                        Value="Top" />
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.RibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="local:TabItemHelper.RibbonLinePlacement"
                     Value="Right">
                <Setter TargetName="BdrRibbon"
                        Property="HorizontalAlignment"
                        Value="Right" />
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.RibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="local:TabItemHelper.RibbonLinePlacement"
                     Value="Bottom">
                <Setter TargetName="BdrRibbon"
                        Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.RibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.HoverRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:TabItemHelper.SelectedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Background"
                        Value="{Binding Path=(local:TabItemHelper.SelectedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="Foreground"
                        Value="{Binding Path=(local:TabItemHelper.SelectedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CcMain"
                        Property="IconForeground"
                        Value="{Binding Path=(local:TabItemHelper.SelectedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedFontSize), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="FontSize"
                        Value="{Binding Path=(local:TabItemHelper.SelectedFontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:TabItemHelper.SelectedBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedCornerRadius), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcMain"
                        Property="CornerRadius"
                        Value="{Binding Path=(local:TabItemHelper.SelectedCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedRibbonLineBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Background"
                        Value="{Binding Path=(local:TabItemHelper.SelectedRibbonLineBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RibbonLinePlacement), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SelectedRibbonLineThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="local:TabItemHelper.RemoveButtonVisibility"
                     Value="Collapsed">
                <Setter TargetName="BtnRemove"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="local:TabItemHelper.RemoveButtonVisibility"
                     Value="Visible">
                <Setter TargetName="BtnRemove"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:TabItemHelper.RemoveButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnRemove"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RemoveButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Header, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnRemove"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:TabItemHelper.RemoveButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Header, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnRemove"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.TabItemStylelessTemplate}"
                     TargetType="TabItem">
        <Grid x:Name="GrdMain"
              IsHitTestVisible="False"
              Margin="{Binding Path=(local:TabItemHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentPresenter x:Name="CcMain"
                              Margin="{TemplateBinding Padding}"
                              ContentSource="Header"
                              VerticalAlignment="{Binding Path=(local:TabItemHelper.VerticalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                              HorizontalAlignment="{Binding Path=(local:TabItemHelper.HorizontalHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Rectangle x:Name="RectSeparator"
                       Grid.Row="1"
                       Fill="{Binding Path=(local:TabItemHelper.SeparatorBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Width="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Margin="{Binding Path=(local:TabItemHelper.SeparatorMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Visibility="{Binding Path=(local:TabItemHelper.SeparatorVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.RowSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="NaN" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.RowSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="NaN" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="NaN" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter TargetName="RectSeparator"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="RectSeparator"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="RectSeparator"
                        Property="Width"
                        Value="NaN" />
                <Setter TargetName="RectSeparator"
                        Property="Height"
                        Value="{Binding Path=(local:TabItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
