<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
  xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
  xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources"
  xmlns:its="clr-namespace:Panuon.WPF.UI.Internal.TemplateSelectors"
  xmlns:local="clr-namespace:Panuon.WPF.UI"
  xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources">
  <ResourceDictionary.MergedDictionaries>
    <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="{x:Static irs:TemplateKeys.PasswordBoxTemplate}" TargetType="PasswordBox">
    <ControlTemplate.Resources>
      <its:WatermarkTemplateSelector x:Key="WatermarkTemplateSelector" />
    </ControlTemplate.Resources>
    <Grid>
      <Border
        x:Name="BdrContainer"
        Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
      <Border Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
        <DockPanel
          x:Name="DockContainer"
          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
          TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
          <i:IconPresenter
            x:Name="IpIcon"
            Width="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Height="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            MinWidth="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            MinHeight="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            MaxWidth="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            MaxHeight="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Margin="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            HorizontalContentAlignment="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            VerticalContentAlignment="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Content="{Binding Path=(local:PasswordBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            FontFamily="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            FontSize="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Foreground="{Binding Path=(local:IconHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            ToolTip="{Binding Path=(local:IconHelper.ToolTip), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <i:IconPresenter.Visibility>
              <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IconVisibilityConverter}}">
                <Binding
                  Mode="OneWay"
                  Path="(local:PasswordBoxHelper.Icon)"
                  RelativeSource="{RelativeSource TemplatedParent}" />
                <Binding
                  Mode="OneWay"
                  Path="(local:IconHelper.HiddenOnNull)"
                  RelativeSource="{RelativeSource TemplatedParent}" />
              </MultiBinding>
            </i:IconPresenter.Visibility>
          </i:IconPresenter>
          <Grid>
            <Border Margin="{TemplateBinding Padding}">
              <ContentControl
                Margin="2,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding Path=(local:PasswordBoxHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                ContentTemplateSelector="{StaticResource WatermarkTemplateSelector}"
                Focusable="False"
                Foreground="{Binding Path=(i:VisualStateHelper.WatermarkForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                IsHitTestVisible="False"
                Visibility="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Border>
            <ScrollViewer
              x:Name="PART_ContentHost"
              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </DockPanel>
      </Border>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="{x:Static irs:TemplateKeys.PasswordBoxClearableAndPlainableTemplate}" TargetType="PasswordBox">
    <ControlTemplate.Resources>
      <its:WatermarkTemplateSelector x:Key="WatermarkTemplateSelector" />
    </ControlTemplate.Resources>
    <Border
      x:Name="BdrContainer"
      Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
      BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
      BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
      CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
      Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
      <DockPanel
        x:Name="DockContainer"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
        <i:IconPresenter
          x:Name="IpIcon"
          Width="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          Height="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          MinWidth="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          MinHeight="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          MaxWidth="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          MaxHeight="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          Margin="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          HorizontalContentAlignment="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          VerticalContentAlignment="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          Content="{Binding Path=(local:PasswordBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          FontFamily="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          FontSize="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          Foreground="{Binding Path=(local:IconHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
          ToolTip="{Binding Path=(local:IconHelper.ToolTip), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
          <i:IconPresenter.Visibility>
            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IconVisibilityConverter}}">
              <Binding
                Mode="OneWay"
                Path="(local:PasswordBoxHelper.Icon)"
                RelativeSource="{RelativeSource TemplatedParent}" />
              <Binding
                Mode="OneWay"
                Path="(local:IconHelper.HiddenOnNull)"
                RelativeSource="{RelativeSource TemplatedParent}" />
            </MultiBinding>
          </i:IconPresenter.Visibility>
        </i:IconPresenter>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid Margin="{TemplateBinding Padding}">
            <ContentControl
              Margin="2,0,0,0"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{Binding Path=(local:PasswordBoxHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
              ContentTemplateSelector="{StaticResource WatermarkTemplateSelector}"
              Focusable="False"
              Foreground="{Binding Path=(i:VisualStateHelper.WatermarkForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
              IsHitTestVisible="False"
              Visibility="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <TextBlock
              Padding="2,0,0,0"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Focusable="False"
              IsHitTestVisible="False"
              Text="{Binding Path=(local:PasswordBoxHelper.Password), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
              Visibility="{Binding Tag, Converter={StaticResource {x:Static rs:ConverterKeys.FalseToHiddenConverter}}, ElementName=BtnPlain}" />
          </Grid>
          <ScrollViewer
            x:Name="PART_ContentHost"
            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
            Visibility="{Binding Tag, Converter={StaticResource {x:Static rs:ConverterKeys.TrueToHiddenConverter}}, ElementName=BtnPlain}" />
          <Button
            x:Name="BtnPlain"
            Grid.Column="1"
            Style="{Binding Path=(local:PasswordBoxHelper.PlainButtonStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Visibility="Collapsed" />
          <Button
            x:Name="BtnClear"
            Grid.Column="2"
            Command="{Binding Path=(local:PasswordBoxHelper.ClearCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Style="{Binding Path=(local:PasswordBoxHelper.ClearButtonStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
            Visibility="Collapsed" />
        </Grid>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:PasswordBoxHelper.ClearButtonVisibility" Value="Visible">
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:PasswordBoxHelper.ClearButtonVisibility" Value="VisibleOnHover" />
          <Condition Property="IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnHoverAndNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:PasswordBoxHelper.ClearButtonVisibility" Value="VisibleOnFocused" />
          <Condition Property="IsKeyboardFocusWithin" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnFocusedAndNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
          <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnClear" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
      <Trigger Property="local:PasswordBoxHelper.PlainButtonVisibility" Value="Visible">
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:PasswordBoxHelper.PlainButtonVisibility" Value="VisibleOnHover" />
          <Condition Property="IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnHoverAndNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:PasswordBoxHelper.PlainButtonVisibility" Value="VisibleOnFocused" />
          <Condition Property="IsKeyboardFocusWithin" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="VisibleOnFocusedAndNonnull" />
          <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
          <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BtnPlain" Property="Visibility" Value="Visible" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

</ResourceDictionary>
