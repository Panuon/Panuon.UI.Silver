<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.ContextMenuItemTemplate}"
                     TargetType="MenuItem">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Border x:Name="BdrContainer"
                        Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Border x:Name="BdrContent"
                        Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Padding="{TemplateBinding Padding}"
                        TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Width="{Binding Path=(local:ContextMenuHelper.ItemsIconWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}">
                            <i:IconPresenter x:Name="IpIcon"
                                             Content="{TemplateBinding Icon}"
                                             Source="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                            <ContentControl x:Name="CcChecked"
                                            Visibility="Collapsed"
                                            Width="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            Height="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            MinWidth="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            MinHeight="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            MaxWidth="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            MaxHeight="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            VerticalContentAlignment="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            HorizontalContentAlignment="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            FontFamily="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            Margin="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            FontSize="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            Foreground="{Binding Path=(local:IconHelper.Foreground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            ToolTip="{Binding Path=(local:IconHelper.ToolTip), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                            ContentTemplate="{Binding Path=(local:ContextMenuHelper.CheckedIconTemplate), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
                        </Grid>
                        <ContentPresenter x:Name="CpHeader"
                                          Grid.Column="1"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          ContentSource="Header" />
                        <ContentControl Grid.Column="2"
                                        Visibility="{Binding HasItems, Converter={StaticResource {x:Static rs:ConverterKeys.FalseToCollapseConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                        Foreground="{Binding Path=(i:VisualStateHelper.Foreground) ,RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                                        ContentTemplate="{Binding Path=(local:ContextMenuHelper.ArrowIconTemplate), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
                    </Grid>
                </Border>
                <local:PopupX x:Name="popDropDown"
                               Placement="{Binding Path=(local:DropDownHelper.Placement), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               IsOpen="{Binding IsSubmenuOpen,  RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                               PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                               Width="{Binding Path=(local:DropDownHelper.Width), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               Height="{Binding Path=(local:DropDownHelper.Height), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               MinWidth="{Binding Path=(local:DropDownHelper.MinWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               MaxWidth="{Binding Path=(local:DropDownHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               MinHeight="{Binding Path=(local:DropDownHelper.MinHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               MaxHeight="{Binding Path=(local:DropDownHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                    <local:PopupX.HorizontalOffset>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownHorizontalOffsetConverter}}">
                            <Binding Path="(local:ShadowHelper.BlurRadius)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.HorizontalOffset)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                            <Binding Path="ActualPlacement"
                                     ElementName="popDropDown"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </local:PopupX.HorizontalOffset>
                    <local:PopupX.VerticalOffset>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownVerticalOffsetConverter}}">
                            <Binding Path="(local:ShadowHelper.BlurRadius)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.VerticalOffset)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                            <Binding Path="ActualPlacement"
                                     ElementName="popDropDown"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                     RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </local:PopupX.VerticalOffset>
                    <Grid x:Name="GrdSubmenu">
                        <Grid.Margin>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ContextMenuDropDownMarginConverter}}">
                                <Binding Path="(local:ShadowHelper.BlurRadius)"
                                         RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                         Mode="OneWay" />
                                <Binding Path="ActualPlacement"
                                         ElementName="popDropDown"
                                         Mode="OneWay" />
                                <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                         RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Grid.Margin>
                        <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Background="{Binding Path=(local:DropDownHelper.Background), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                BorderThickness="{Binding Path=(local:DropDownHelper.BorderThickness), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                CornerRadius="{Binding Path=(local:DropDownHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=ContextMenu},Mode=OneWay}">
                            <Border.Effect>
                                <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropShadowEffectWithDepthConverter}}">
                                    <Binding Path="(local:DropDownHelper.ShadowColor)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                    <Binding Path="(local:ShadowHelper.BlurRadius)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                    <Binding Path="(local:ShadowHelper.ShadowDepth)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                    <Binding Path="(local:ShadowHelper.Direction)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                    <Binding Path="(local:ShadowHelper.Opacity)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                    <Binding Path="(local:ShadowHelper.RenderingBias)"
                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                             Mode="OneWay" />
                                </MultiBinding>
                            </Border.Effect>
                        </Border>
                        <i:ClippingBorder SnapsToDevicePixels="True"
                                          CornerRadius="{Binding Path=(local:DropDownHelper.CornerRadius),RelativeSource={RelativeSource AncestorType=ContextMenu},Mode=OneWay}">
                            <ScrollViewer VerticalScrollBarVisibility="{Binding Path=(ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                          HorizontalScrollBarVisibility="{Binding Path=(ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                          Padding="{Binding Path=(local:DropDownHelper.Padding), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}">
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </i:ClippingBorder>
                        <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{Binding Path=(local:DropDownHelper.BorderBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                BorderThickness="{Binding Path=(local:DropDownHelper.BorderThickness), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}"
                                CornerRadius="{Binding Path=(local:DropDownHelper.CornerRadius),RelativeSource={RelativeSource AncestorType=ContextMenu},Mode=OneWay}"
                                IsHitTestVisible="False" />
                    </Grid>
                </local:PopupX>
            </Grid>
            <Rectangle x:Name="RectSeparator"
                       Grid.Row="1"
                       Fill="{Binding Path=(local:MenuItemHelper.SeparatorBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Height="{Binding Path=(local:MenuItemHelper.SeparatorThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Margin="{Binding Path=(local:MenuItemHelper.SeparatorMargin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Visibility="{Binding Path=(local:MenuItemHelper.SeparatorVisibility), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IsItemSeparatorShallVisibleControlConverter}}">
                        <Binding Path="."
                                 RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                        <Binding Path="."
                                 RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="RectSeparator"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked"
                               Value="True" />
                    <Condition Property="IsCheckable"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CcChecked"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="IpIcon"
                        Property="Visibility"
                        Value="Collapsed" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self},Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedForeground), RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                <Setter TargetName="BdrContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedForeground), RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                <Setter TargetName="CcChecked"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedForeground), RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                <Setter TargetName="IpIcon"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self},Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="Background"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self},Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:MenuItemHelper.CheckedBorderThickness), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.ClickForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="BdrContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CcChecked"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.ClickForeground), RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                <Setter TargetName="IpIcon"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.ClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="Background"
                        Value="{Binding Path=(local:MenuItemHelper.ClickBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.ClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:MenuItemHelper.ClickBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="BdrContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CcChecked"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedForeground), RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}" />
                <Setter TargetName="IpIcon"
                        Property="Foreground"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="Background"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:MenuItemHelper.OpenedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
