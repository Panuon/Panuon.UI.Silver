<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Styles/ButtonStyle.xaml" />
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Templates/WindowXTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=ButtonStyle, TypeInTargetAssembly={x:Type local:WindowXModalDialog}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="Height"
                Value="35" />
        <Setter Property="Padding"
                Value="30,0" />
        <Setter Property="Margin"
                Value="5,0,0,0" />
        <Style.Triggers>
            <Trigger Property="IsDefault"
                     Value="True">
                <Setter Property="Background"
                        Value="#D1D1D1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=MinimizeButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="#CCCCCC" />
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="White" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:WindowXCaption.Foreground), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height), Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=4, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Content"
                Value="&#xe92a;" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=MaximizeButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="#CCCCCC" />
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="White" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:WindowXCaption.Foreground), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height), Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=4, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Content"
                Value="&#xe92b;" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                         Value="Maximized">
                <Setter Property="Content"
                        Value="&#xe92c;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=CloseButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="#D64343" />
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="White" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:WindowXCaption.Foreground), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height), Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:ConverterKeys.DoublePlusConverter}}, ConverterParameter=4, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=HeaderTemplate, TypeInTargetAssembly={x:Type local:WindowXCaption}}">
        <StackPanel  Orientation="Horizontal"
                     Margin="5,0,0,0"
                     x:Shared="False">
            <Image Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                   Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                   Source="{Binding Icon,RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                   Visibility="{Binding Icon,Converter={StaticResource {x:Static rs:ConverterKeys.NullToCollapseConverter}}, RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                   Margin="5,0,0,0"
                   VerticalAlignment="Center" />
            <TextBlock Margin="5,0,0,0"
                       Foreground="{Binding Path=(local:WindowXCaption.Foreground), RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                       Text="{Binding Title, RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}"
                       VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="{x:Static irs:StyleKeys.WindowXStyle}"
           TargetType="local:WindowX">
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding IconFontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding IconFontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:WindowXCaption.Height"
                Value="35" />
        <Setter Property="local:WindowXCaption.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:WindowXCaption.HeaderTemplate"
                Value="{StaticResource {ComponentResourceKey ResourceId=HeaderTemplate, TypeInTargetAssembly={x:Type local:WindowXCaption}}}" />
        <Setter Property="local:WindowXCaption.MinimizeButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=MinimizeButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}}" />
        <Setter Property="local:WindowXCaption.MaximizeButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=MaximizeButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}}" />
        <Setter Property="local:WindowXCaption.CloseButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=CloseButtonStyle, TypeInTargetAssembly={x:Type local:WindowXCaption}}}" />
        <Setter Property="local:WindowXCaption.BackstageMinimizeButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.MinimizeButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.BackstageMaximizeButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.MaximizeButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.BackstageCloseButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.CloseButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.Background"
                Value="{Binding Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXModalDialog.ButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ButtonStyle, TypeInTargetAssembly={x:Type local:WindowXModalDialog}}}" />
        <Setter Property="local:WindowXModalDialog.ButtonPanelHorizontalAlignment"
                Value="Right" />
        <Setter Property="FontFamily"
                Value="{Binding FontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="MaskBrush"
                Value="#B3FFFFFF" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.WindowXTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
            <Trigger Property="IsMaskVisible"
                     Value="True">
                <Setter Property="DisableDragMove"
                        Value="True" />
            </Trigger>
            <Trigger Property="IsFullScreen"
                     Value="True">
                <Setter Property="WindowStyle"
                        Value="None" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>