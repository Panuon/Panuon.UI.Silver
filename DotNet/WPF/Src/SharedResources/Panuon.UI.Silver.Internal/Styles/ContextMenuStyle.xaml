<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Templates/ContextMenuTemplate.xaml" />
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Templates/ContextMenuItemTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=ArrowIconTemplate, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}">
        <TextBlock Text="&#xe902;"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                   FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon"
                   Margin="0,0,5,0" />
    </DataTemplate>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=CheckedIconTemplate, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}">
        <TextBlock Text="&#xe92e;"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                   FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=MenuItemStyle, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}"
           TargetType="MenuItem">
        <Setter Property="i:VisualStateHelper.Regist"
                Value="True" />
        <Setter Property="i:VisualStateHelper.IsHover"
                Value="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground) ,RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Width"
                Value="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Height"
                Value="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.VerticalAlignment"
                Value="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.HorizontalAlignment"
                Value="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MinWidth"
                Value="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MinHeight"
                Value="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MaxWidth"
                Value="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MaxHeight"
                Value="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.CornerRadius"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsCornerRadius), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.SeparatorBrush"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsSeparatorBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.SeparatorThickness"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsSeparatorThickness), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.SeparatorMargin"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsSeparatorMargin), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.SeparatorVisibility"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsSeparatorVisibility), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.HoverBackground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsHoverBackground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.HoverBorderBrush"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.HoverForeground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsHoverForeground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.CheckedBackground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsCheckedBackground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.CheckedBorderBrush"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.CheckedForeground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsCheckedForeground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.ClickBackground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsClickBackground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.ClickBorderBrush"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsClickBorderBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="local:MenuItemHelper.ClickForeground"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsClickForeground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Padding"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsPadding), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Margin"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsMargin), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Icon"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsIcon), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsBackground), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="BorderBrush"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsBorderBrush), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="BorderThickness"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsBorderThickness), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsWidth), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.ContextMenuItemTemplate}}" />
    </Style>

    <Style x:Key="{x:Static rs:StyleKeys.ContextMenuStyle}"
        TargetType="{x:Type ContextMenu}">
        <Style.Resources>
            <Style TargetType="MenuItem"
                   BasedOn="{StaticResource {ComponentResourceKey ResourceId=MenuItemStyle, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}}" />
        </Style.Resources>
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding IconFontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding IconFontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.Margin"
                Value="0,0,0,0" />
        <Setter Property="local:IconHelper.VerticalAlignment"
                Value="Center" />
        <Setter Property="local:IconHelper.HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{Binding FontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:ShadowHelper.BlurRadius"
                Value="15" />
        <Setter Property="local:ShadowHelper.ShadowDepth"
                Value="5" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:ContextMenuHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ContextMenuHelper.Background), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="BorderBrush"
                Value="{Binding Path=(local:ContextMenuHelper.BorderBrush), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="BorderThickness"
                Value="{Binding (local:ContextMenuHelper.BorderThickness), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Padding"
                Value="{Binding (local:ContextMenuHelper.Padding), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ContextMenuHelper.ItemsPadding"
                Value="5,0" />
        <Setter Property="local:ContextMenuHelper.ItemsHeight"
                Value="30" />
        <Setter Property="local:ContextMenuHelper.ItemsWidth">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropDownMinWidthConverter}}">
                    <Binding Path="ActualWidth"
                             RelativeSource="{RelativeSource Self}"
                             Mode="OneWay" />
                    <Binding Path="(local:ShadowHelper.BlurRadius)"
                             RelativeSource="{RelativeSource Self}"
                             Mode="OneWay" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="local:ContextMenuHelper.ItemsSeparatorBrush"
                Value="#E6E6E6" />
        <Setter Property="local:ContextMenuHelper.ItemsSeparatorThickness"
                Value="1" />
        <Setter Property="local:ContextMenuHelper.ItemsSeparatorVisibility"
                Value="Collapsed" />
        <Setter Property="local:ContextMenuHelper.ItemsBackground"
                Value="Transparent" />
        <Setter Property="local:ContextMenuHelper.ItemsHoverBackground"
                Value="#F1F1F1" />
        <Setter Property="local:ContextMenuHelper.ItemsIconWidth"
                Value="{Binding Path=(local:ContextMenuHelper.ItemsHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.Placement"
                Value="RightBottom" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalOffset"
                Value="{Binding Path=(local:ShadowHelper.BlurRadius), Converter={StaticResource {x:Static rs:ConverterKeys.DoubleMultiplyByConverter}}, ConverterParameter=-1, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HorizontalOffset"
                Value="{Binding Path=(local:ShadowHelper.BlurRadius), Converter={StaticResource {x:Static rs:ConverterKeys.DoubleMultiplyByConverter}}, ConverterParameter=-1, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ContextMenuHelper.ArrowIconTemplate"
                Value="{StaticResource {ComponentResourceKey ResourceId=ArrowIconTemplate, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}}" />
        <Setter Property="local:ContextMenuHelper.CheckedIconTemplate"
                Value="{StaticResource {ComponentResourceKey ResourceId=CheckedIconTemplate, TypeInTargetAssembly={x:Type local:ContextMenuHelper}}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="Width"
                Value="200" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.ContextMenuTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
