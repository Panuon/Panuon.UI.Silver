<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Styles/ButtonStyle.xaml" />
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Styles/TextBoxStyle.xaml" />
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Templates/ComboBoxTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=ClearButtonStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="{Binding Foreground, Converter={StaticResource {x:Static irs:ConverterKeys.LightenSolidColorBrushConverter}}, ConverterParameter=0.6, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="{x:Null}" />
        <Setter Property="local:ButtonHelper.ClickBackground"
                Value="{x:Null}" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Margin"
                Value="0,0,5,0" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=RemoveButtonStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.ButtonStyle}}">
        <Setter Property="local:ButtonHelper.HoverForeground"
                Value="{Binding Foreground, Converter={StaticResource {x:Static irs:ConverterKeys.LightenSolidColorBrushConverter}}, ConverterParameter=0.6, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="{x:Null}" />
        <Setter Property="local:ButtonHelper.ClickBackground"
                Value="{x:Null}" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Margin"
                Value="0,0,5,0" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=ToggleArrowTransformControlStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}"
           TargetType="local:TransformControl">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="Content"
                Value="&#xe903;" />
        <Setter Property="Padding"
                Value="4,0,8,0" />
        <Setter Property="AnimationDuration"
                Value="0:0:0.15" />
        <Setter Property="Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Mode=OneWay}"
                         Value="True">
                <Setter Property="ScaleY"
                        Value="-1" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=SearchTextBoxStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}"
           TargetType="TextBox"
           BasedOn="{StaticResource {x:Static rs:StyleKeys.TextBoxStyle}}">
        <Setter Property="local:IconHelper.Margin"
                Value="10,0,0,0" />
        <Setter Property="local:TextBoxHelper.ClearButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ClearButtonStyle, TypeInTargetAssembly={x:Type local:TextBoxHelper}}}" />
        <Setter Property="Padding"
                Value="{Binding Padding, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="local:TextBoxHelper.Icon"
                Value="&#xe928;" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
    </Style>

    <Style x:Key="{x:Static rs:StyleKeys.ComboBoxStyle}"
           TargetType="ComboBox">
        <Setter Property="i:VisualStateHelper.Regist"
                Value="True" />
        <Setter Property="i:VisualStateHelper.IsHover"
                Value="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="i:VisualStateHelper.IsFocused"
                Value="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding IconFontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding IconFontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="10,0,0,0" />
        <Setter Property="local:IconHelper.VerticalAlignment"
                Value="Center" />
        <Setter Property="local:IconHelper.HorizontalAlignment"
                Value="Left" />
        <Setter Property="local:DropDownHelper.CornerRadius"
                Value="{Binding Path=(local:ComboBoxHelper.CornerRadius), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.Background"
                Value="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.BorderBrush"
                Value="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.BorderThickness"
                Value="{Binding BorderThickness, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.MinWidth"
                Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.MaxHeight"
                Value="{Binding MaxDropDownHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DropDownHelper.Placement"
                Value="BottomRight" />
        <Setter Property="local:ComboBoxHelper.WatermarkForeground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground), Converter={StaticResource {x:Static irs:ConverterKeys.BrushOpacityConverter}}, ConverterParameter=0.8, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ComboBoxHelper.ItemsHeight"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ComboBoxHelper.ItemsPadding"
                Value="{Binding Padding, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ComboBoxHelper.ItemsForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:ComboBoxHelper.ItemsBackground"
                Value="Transparent" />
        <Setter Property="local:ComboBoxHelper.ItemsHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:ComboBoxHelper.ItemsSelectedBackground"
                Value="#F1F1F1" />
        <Setter Property="local:ComboBoxHelper.ItemsSeparatorBrush"
                Value="LightGray" />
        <Setter Property="local:ComboBoxHelper.ItemsSeparatorThickness"
                Value="1" />
        <Setter Property="local:ComboBoxHelper.ItemsSeparatorVisibility"
                Value="Collapsed" />
        <Setter Property="local:DropDownHelper.ShadowColor"
                Value="#EAEAEA" />
        <Setter Property="local:ComboBoxHelper.SearchTextBoxStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=SearchTextBoxStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}}" />
        <Setter Property="local:ComboBoxHelper.ClearButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ClearButtonStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}}" />
        <Setter Property="local:ComboBoxHelper.RemoveButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=RemoveButtonStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}}" />
        <Setter Property="local:ComboBoxHelper.ToggleArrowTransformControlStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ToggleArrowTransformControlStyle, TypeInTargetAssembly={x:Type local:ComboBoxHelper}}}" />
        <Setter Property="MaxDropDownHeight"
                Value="150" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Padding"
                Value="5,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True"
                                            VirtualizingStackPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.ComboBoxTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
            <Trigger Property="local:ComboBoxHelper.IsSearchTextBoxPinned"
                     Value="True">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:TemplateKeys.ComboBoxWithFixedSearchBoxTemplate}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.FocusedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderBrushLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.FocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBackgroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.FocusedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverForegroundLock"
                        Value="True" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
