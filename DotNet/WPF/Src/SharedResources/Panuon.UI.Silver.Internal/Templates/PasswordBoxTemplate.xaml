<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.PasswordBoxTemplate}"
                     TargetType="PasswordBox">
        <i:ContentControlX x:Name="CcMain"
                           Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                           Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{Binding Path=(local:PasswordBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Icon="{Binding Path=(local:PasswordBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock IsHitTestVisible="False"
                           Focusable="False"
                           Margin="{TemplateBinding Padding}"
                           Padding="2,0,0,0"
                           Visibility="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                           Text="{Binding Path=(local:PasswordBoxHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Foreground="{Binding Path=(local:PasswordBoxHelper.WatermarkBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                <TextBlock IsHitTestVisible="False"
                           Focusable="False"
                           Margin="{TemplateBinding Padding}"
                           Padding="2,0,0,0"
                           Visibility="{Binding IsPressed, Converter={StaticResource {x:Static rs:ConverterKeys.FalseToHiddenConverter}}, ElementName=BtnPlain, Mode=OneWay}"
                           Text="{Binding Path=(local:PasswordBoxHelper.Password),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                <ScrollViewer x:Name="PART_ContentHost"
                              Visibility="{Binding IsPressed, Converter={StaticResource {x:Static rs:ConverterKeys.TrueToHiddenConverter}}, ElementName=BtnPlain, Mode=OneWay}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                <Button x:Name="BtnClear"
                        Grid.Column="1"
                        Visibility="Collapsed"
                        Style="{Binding Path=(local:PasswordBoxHelper.ClearButtonStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Command="{Binding Path=(local:PasswordBoxHelper.ClearCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                <Button x:Name="BtnPlain"
                        Grid.Column="2"
                        Visibility="Collapsed"
                        Style="{Binding Path=(local:PasswordBoxHelper.PlainButtonStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid>
        </i:ContentControlX>
        <ControlTemplate.Triggers>
            <Trigger  Property="local:PasswordBoxHelper.ClearButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:PasswordBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:PasswordBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <Trigger  Property="local:PasswordBoxHelper.PlainButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:PasswordBoxHelper.PlainButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:PasswordBoxHelper.PlainButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.PlainButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnPlain"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
