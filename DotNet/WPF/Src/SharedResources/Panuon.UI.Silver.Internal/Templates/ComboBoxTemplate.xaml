<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.ComboBoxTemplate}"
                     TargetType="ComboBox">
        <Grid>
            <i:ContentControlX x:Name="CcMain"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{Binding Path=(local:ComboBoxHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Icon="{Binding Path=(local:ComboBoxHelper.Icon), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                <ToggleButton Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Margin="2,0,0,0">
                            <ContentControl x:Name="ContentSite"
                                            IsHitTestVisible="False"
                                            Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                            Margin="{TemplateBinding Padding}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <TextBlock x:Name="TxtWatermark"
                                   Visibility="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}}, RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}"
                                   Text="{Binding Path=(local:ComboBoxHelper.Watermark), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                   Foreground="{Binding Path=(local:ComboBoxHelper.WatermarkBrush),RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                   Padding="2,0,0,0"
                                   Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Focusable="True"
                                 Padding="{TemplateBinding Padding}"
                                 CaretBrush="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                 Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="{Binding IsEditable, Converter={StaticResource {x:Static rs:ConverterKeys.FalseToCollapseConverter}}, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Border x:Name="PART_ContentHost"
                                                        Focusable="False"
                                                        Margin="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Button x:Name="BtnClear"
                                Grid.Column="1"
                                Visibility="Collapsed"
                                Style="{Binding Path=(local:ComboBoxHelper.ClearButtonStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                Command="{Binding Path=(local:ComboBoxHelper.ClearCommand), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                        <local:TransformControl Grid.Column="2"
                                                Style="{Binding Path=(local:ComboBoxHelper.ToggleArrowTransformControlStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                                TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                                TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
                    </Grid>
                </ToggleButton>
            </i:ContentControlX>
            <i:CustomPopup x:Name="PART_Popup"
                           Focusable="False"
                           AllowsTransparency="True"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay}"
                           PlacementTarget="{Binding ElementName=CcMain}"
                           Placement="{Binding Path=(local:DropDownHelper.Placement), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                           PopupAnimation="Fade"
                           StaysOpen="False">
                <i:CustomPopup.HorizontalOffset>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownHorizontalOffsetConverter}}">
                        <Binding Path="(local:ShadowHelper.BlurRadius)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.HorizontalOffset)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="ActualPlacement"
                                 ElementName="PART_Popup"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                    </MultiBinding>
                </i:CustomPopup.HorizontalOffset>
                <i:CustomPopup.VerticalOffset>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownVerticalOffsetConverter}}">
                        <Binding Path="(local:ShadowHelper.BlurRadius)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.VerticalOffset)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="ActualPlacement"
                                 ElementName="PART_Popup"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                    </MultiBinding>
                </i:CustomPopup.VerticalOffset>
                <Grid x:Name="GrdDropDown"
                      Height="{Binding Path=(local:DropDownHelper.Height), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      Width="{Binding Path=(local:DropDownHelper.Width), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MinWidth="{Binding Path=(local:DropDownHelper.MinWidth), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MinHeight="{Binding Path=(local:DropDownHelper.MinHeight), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MaxHeight="{Binding Path=(local:DropDownHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MaxWidth="{Binding Path=(local:DropDownHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                    <Grid.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownMarginConverter}}">
                            <Binding Path="(local:ShadowHelper.BlurRadius)"
                                     RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                     Mode="OneWay" />
                            <Binding Path="ActualPlacement"
                                     ElementName="PART_Popup"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                     RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Grid.Margin>
                    <i:ContentControlX Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Background="{Binding Path=(local:DropDownHelper.Background), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                       BorderBrush="{Binding Path=(local:DropDownHelper.BorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}"
                                       BorderThickness="{Binding Path=(local:DropDownHelper.BorderThickness), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                       CornerRadius="{Binding Path=(local:DropDownHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                        <i:ContentControlX.Effect>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropShadowEffectWithDepthConverter}}">
                                <Binding Path="(local:DropDownHelper.ShadowColor)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.BlurRadius)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.ShadowDepth)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Direction)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Opacity)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.RenderingBias)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </i:ContentControlX.Effect>
                        <ScrollViewer Margin="{Binding Path=(local:DropDownHelper.Padding),RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBox local:ComboBoxHelper.SearchTextBoxHook="True"
                                         Text="{Binding Path=(local:ComboBoxHelper.SearchText), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{Binding Path=(local:ComboBoxHelper.SearchTextBoxStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                         Visibility="{Binding Path=(local:ComboBoxHelper.SearchTextBoxVisibility), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
                                <ItemsPresenter Grid.Row="1"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Grid>
                        </ScrollViewer>
                    </i:ContentControlX>
                </Grid>
            </i:CustomPopup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger  Property="local:ComboBoxHelper.ClearButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ComboBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ComboBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.ComboBoxWithFixedSearchBoxTemplate}"
                     TargetType="ComboBox">
        <Grid>
            <i:ContentControlX x:Name="CcMain"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{Binding Path=(local:ComboBoxHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                               Icon="{Binding Path=(local:ComboBoxHelper.Icon), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                <ToggleButton Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="ContentSite"
                                        Focusable="False"
                                        Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <TextBlock x:Name="TxtWatermark"
                                   Visibility="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.StringNonnullAndNotEmptyToCollapseConverter}}, RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}"
                                   Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                   Text="{Binding Path=(local:ComboBoxHelper.Watermark), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                   Padding="2,0,0,0"
                                   Margin="{TemplateBinding Padding}"
                                   Opacity="0.6"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Focusable="True"
                                 Padding="{TemplateBinding Padding}"
                                 CaretBrush="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                 Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="{Binding IsEditable, Converter={StaticResource {x:Static rs:ConverterKeys.FalseToCollapseConverter}}, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <ScrollViewer x:Name="PART_ContentHost"
                                                        Focusable="False"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Button x:Name="BtnClear"
                                Grid.Column="1"
                                Visibility="Collapsed"
                                Style="{Binding Path=(local:ComboBoxHelper.ClearButtonStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                Command="{Binding Path=(local:ComboBoxHelper.ClearCommand), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                        <local:TransformControl Grid.Column="2"
                                                Style="{Binding Path=(local:ComboBoxHelper.ToggleArrowTransformControlStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                                TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                                TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
                    </Grid>
                </ToggleButton>
            </i:ContentControlX>
            <i:CustomPopup x:Name="PART_Popup"
                           Focusable="False"
                           AllowsTransparency="True"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay}"
                           PlacementTarget="{Binding ElementName=CcMain}"
                           Placement="{Binding Path=(local:DropDownHelper.Placement), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                           PopupAnimation="Fade"
                           StaysOpen="False">
                <i:CustomPopup.HorizontalOffset>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownHorizontalOffsetConverter}}">
                        <Binding Path="(local:ShadowHelper.BlurRadius)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.HorizontalOffset)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="ActualPlacement"
                                 ElementName="PART_Popup"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                    </MultiBinding>
                </i:CustomPopup.HorizontalOffset>
                <i:CustomPopup.VerticalOffset>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownVerticalOffsetConverter}}">
                        <Binding Path="(local:ShadowHelper.BlurRadius)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.VerticalOffset)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                        <Binding Path="ActualPlacement"
                                 ElementName="PART_Popup"
                                 Mode="OneWay" />
                        <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                 RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                 Mode="OneWay" />
                    </MultiBinding>
                </i:CustomPopup.VerticalOffset>
                <Grid x:Name="GrdDropDown"
                      Height="{Binding Path=(local:DropDownHelper.Height), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      Width="{Binding Path=(local:DropDownHelper.Width), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MinWidth="{Binding Path=(local:DropDownHelper.MinWidth), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MinHeight="{Binding Path=(local:DropDownHelper.MinHeight), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MaxHeight="{Binding Path=(local:DropDownHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                      MaxWidth="{Binding Path=(local:DropDownHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                    <Grid.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.ComboBoxDropDownMarginConverter}}">
                            <Binding Path="(local:ShadowHelper.BlurRadius)"
                                     RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                     Mode="OneWay" />
                            <Binding Path="ActualPlacement"
                                     ElementName="PART_Popup"
                                     Mode="OneWay" />
                            <Binding Path="(local:DropDownHelper.ClipDockSideShadow)"
                                     RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Grid.Margin>
                    <i:ContentControlX Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Background="{Binding Path=(local:DropDownHelper.Background), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                       BorderBrush="{Binding Path=(local:DropDownHelper.BorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}"
                                       BorderThickness="{Binding Path=(local:DropDownHelper.BorderThickness), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                       CornerRadius="{Binding Path=(local:DropDownHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}">
                        <i:ContentControlX.Effect>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropShadowEffectWithDepthConverter}}">
                                <Binding Path="(local:DropDownHelper.ShadowColor)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.BlurRadius)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.ShadowDepth)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Direction)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.Opacity)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                                <Binding Path="(local:ShadowHelper.RenderingBias)"
                                         RelativeSource="{RelativeSource AncestorType=ComboBox}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </i:ContentControlX.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBox local:ComboBoxHelper.SearchTextBoxHook="True"
                                     Text="{Binding Path=(local:ComboBoxHelper.SearchText), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{Binding Path=(local:ComboBoxHelper.SearchTextBoxStyle), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}"
                                     Visibility="{Binding Path=(local:ComboBoxHelper.SearchTextBoxVisibility), RelativeSource={RelativeSource AncestorType=ComboBox}, Mode=OneWay}" />
                            <ScrollViewer Grid.Row="1"
                                          Margin="{Binding Path=(local:DropDownHelper.Padding),RelativeSource={RelativeSource AncestorType=ComboBox},Mode=OneWay}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </i:ContentControlX>
                </Grid>
            </i:CustomPopup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger  Property="local:ComboBoxHelper.ClearButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ComboBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:ComboBoxHelper.ClearButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ClearButtonVisibility), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
