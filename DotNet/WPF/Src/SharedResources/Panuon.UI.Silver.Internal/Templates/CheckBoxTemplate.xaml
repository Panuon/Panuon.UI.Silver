<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.CheckBoxTemplate}"
                     TargetType="CheckBox">
        <Grid Background="Transparent"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <local:ContentControlX x:Name="CcBox"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Grid>
                    <Path Visibility="{Binding IsChecked, Converter={StaticResource {x:Static rs:ConverterKeys.NullToCollapseConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          StrokeThickness="{Binding Path=(local:CheckBoxHelper.GlyphThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          StrokeDashCap="Round">
                        <Path.Stroke>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Grid Height="1"
                                          Width="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border Width="{Binding Path=(i:VisualStateHelper.Percent), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                Background="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                        <Border Grid.Column="1"
                                                Background="{Binding Path=(i:VisualStateHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Path.Stroke>
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.CheckBoxCheckPathConverter}}">
                                <Binding Path="ActualWidth"
                                         RelativeSource="{RelativeSource Self}"
                                         Mode="OneWay" />
                                <Binding Path="ActualHeight"
                                         RelativeSource="{RelativeSource Self}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                    <Border SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding IsChecked, Converter={StaticResource {x:Static rs:ConverterKeys.NonnullToCollapseConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Background="{Binding Path=(local:CheckBoxHelper.NullableGlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Width="{Binding Path=(local:CheckBoxHelper.BoxWidth), Converter={StaticResource {x:Static rs:ConverterKeys.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Height="{Binding Path=(local:CheckBoxHelper.BoxHeight), Converter={StaticResource {x:Static rs:ConverterKeys.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Grid>
            </local:ContentControlX>
            <ContentPresenter x:Name="CpContent"
                              Grid.Column="1"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                              TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                              Margin="{TemplateBinding Padding}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="local:CheckBoxHelper.ContentPlacement"
                     Value="Left">
                <Setter TargetName="CcBox"
                        Property="Grid.Column"
                        Value="2" />
            </Trigger>
            <Trigger Property="local:CheckBoxHelper.ContentPlacement"
                     Value="Right">
                <Setter TargetName="CcBox"
                        Property="Grid.Column"
                        Value="0" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="Background"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.NullableBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="Background"
                        Value="{Binding Path=(local:CheckBoxHelper.NullableBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.NullableBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:CheckBoxHelper.NullableBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.NullableBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:CheckBoxHelper.NullableBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.NullableForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:CheckBoxHelper.NullableForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:CheckBoxHelper.NullableForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
