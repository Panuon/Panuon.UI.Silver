<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridCellTemplate}"
                     TargetType="DataGridCell">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <Border x:Name="BdrBack"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Background="{TemplateBinding Background}" />
            <ContentPresenter x:Name="CpContent"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:DataGridHelper.CellFocusedBorderBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.CellFocusedForeground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.CellFocusedBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:DataGridHelper.CellFocusedBorderThickness), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, Converter={StaticResource {x:Static irs:ConverterKeys.DataGridSelectionUnitIsNotFullRowConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, Converter={StaticResource {x:Static irs:ConverterKeys.DataGridSelectionUnitIsNotFullRowConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedForeground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellReadOnlyBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:DataGridHelper.CellReadOnlyBorderBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellReadOnlyForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.CellReadOnlyForeground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellReadOnlyBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.CellReadOnlyBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellReadOnlyBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:DataGridHelper.CellReadOnlyBorderThickness), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, Converter={StaticResource {x:Static irs:ConverterKeys.DataGridSelectionUnitIsNotFullRowConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverBackground),Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, Converter={StaticResource {x:Static irs:ConverterKeys.DataGridSelectionUnitIsNotFullRowConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverForeground),Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridRowTemplate}"
                     TargetType="DataGridRow">
        <Grid x:Name="GrdMain">
            <Border x:Name="BdrBack"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <SelectiveScrollingGrid>
                <SelectiveScrollingGrid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </SelectiveScrollingGrid.ColumnDefinitions>
                <SelectiveScrollingGrid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </SelectiveScrollingGrid.RowDefinitions>
                <DataGridCellsPresenter Grid.Column="1"
                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <DataGridDetailsPresenter Grid.Column="1"
                                          Grid.Row="1"
                                          Visibility="{TemplateBinding DetailsVisibility}"
                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <DataGridRowHeader Grid.RowSpan="2"
                                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                   Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            </SelectiveScrollingGrid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="FullRow" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverBackground),Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="FullRow" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridColumnHeaderTemplate}"
                     TargetType="DataGridColumnHeader">
        <Grid x:Name="GrdMain">
            <Border x:Name="BdrBack"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <Rectangle x:Name="RectRight"
                       Width="1"
                       Margin="-0.5,0,0,0"
                       HorizontalAlignment="Right"
                       Visibility="{TemplateBinding SeparatorVisibility}"
                       Fill="{TemplateBinding SeparatorBrush}" />
            <Grid Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="CpContent"
                                  ContentSource="Content" />
                <local:TransformControl x:Name="TcArrow"
                                        Grid.Column="1"
                                        Style="{Binding Path=(local:DataGridHelper.SortArrowTransformControlStyle), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </Grid>
            <Thumb x:Name="PART_LeftHeaderGripper"
                   HorizontalAlignment="Left"
                   Cursor="SizeWE"
                   Width="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                <Thumb.Style>
                    <Style TargetType="Thumb">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Thumb">
                                    <Rectangle Fill="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Thumb.Style>
            </Thumb>
            <Thumb x:Name="PART_RightHeaderGripper"
                   HorizontalAlignment="Right"
                   Cursor="SizeWE"
                   Width="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                <Thumb.Style>
                    <Style TargetType="Thumb">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Thumb">
                                    <Rectangle Fill="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Thumb.Style>
            </Thumb>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="TcArrow"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="TcArrow"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.ColumnHeaderClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderClickBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.ColumnHeaderClickForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="TcArrow"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="TcArrow"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.ColumnHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SortDirection, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.SortArrowVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="CollapsedWhenUnsorted" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="TcArrow"
                        Property="Visibility"
                        Value="Collapsed" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SortDirection, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.SortArrowVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="HiddenWhenUnsorted" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="TcArrow"
                        Property="Visibility"
                        Value="Hidden" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridRowHeaderTemplate}"
                     TargetType="DataGridRowHeader">
        <ControlTemplate.Resources>
            <Style x:Key="RowHeaderGripperStyle"
                   TargetType="{x:Type Thumb}">
                <Setter Property="Height"
                        Value="8" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Cursor"
                        Value="SizeNS" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="BdrMain"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="CpContent"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Control Grid.Column="1"
                                 SnapsToDevicePixels="false"
                                 Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                 Visibility="{Binding (Validation.HasError), Converter={StaticResource {x:Static rs:ConverterKeys.FalseToCollapseConverter}}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                    </Grid>
                    <Thumb x:Name="PART_TopHeaderGripper"
                           Style="{StaticResource RowHeaderGripperStyle}"
                           VerticalAlignment="Top" />
                    <Thumb x:Name="PART_BottomHeaderGripper"
                           Style="{StaticResource RowHeaderGripperStyle}"
                           VerticalAlignment="Bottom" />
                </Grid>
            </Border>
            <Rectangle x:Name="RectHorizontal"
                       Height="1"
                       VerticalAlignment="Bottom"
                       Fill="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            <Rectangle Width="1"
                       HorizontalAlignment="Right"
                       Visibility="{TemplateBinding SeparatorVisibility}"
                       Fill="{TemplateBinding SeparatorBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderHoverBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderHoverBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderHoverBorderBrush),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderHoverBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderHoverForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderClickBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderClickBorderBrush),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsRowHeaderPressed), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderClickForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding GridLinesVisibility, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                         Value="Vertical">
                <Setter TargetName="RectHorizontal"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding GridLinesVisibility, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                         Value="None">
                <Setter TargetName="RectHorizontal"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridScrollViewerTemplate}"
                     TargetType="ScrollViewer">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <local:ContentControlX x:Name="CcHeaderContainer"
                                   Background="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                   BorderBrush="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelBorderBrush),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                   BorderThickness="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelBorderThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                   CornerRadius="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelCornerRadius),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                <local:ContentControlX.Effect>
                    <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.DropShadowEffectWithDepthConverter}}">
                        <Binding Path="(local:DataGridHelper.ColumnHeaderPanelShadowColor)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                        <Binding Path="(local:ShadowHelper.BlurRadius)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                        <Binding Path="(local:ShadowHelper.ShadowDepth)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                        <Binding Path="(local:ShadowHelper.Direction)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                        <Binding Path="(local:ShadowHelper.Opacity)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                        <Binding Path="(local:ShadowHelper.RenderingBias)"
                                 RelativeSource="{RelativeSource AncestorType=DataGrid}"
                                 Mode="OneWay" />
                    </MultiBinding>
                </local:ContentControlX.Effect>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="BtnSelectAll"
                            Focusable="False"
                            Command="{x:Static DataGrid.SelectAllCommand}"
                            Style="{Binding Path=(local:DataGridHelper.SelectAllButtonStyle), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Mode=OneWay}" />
                    <Rectangle x:Name="RectVertical"
                               Width="1"
                               HorizontalAlignment="Right"
                               Visibility="{Binding Path=(local:DataGridHelper.RowHeaderSeparatorVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Fill="{Binding Path=(local:DataGridHelper.RowHeaderSeparatorBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                    Grid.Column="1"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <Rectangle x:Name="rectSeparator"
                               Grid.ColumnSpan="2"
                               Height="1"
                               VerticalAlignment="Bottom"
                               Visibility="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelSeparatorVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Fill="{Binding Path=(local:DataGridHelper.ColumnHeaderPanelSeparatorBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                </Grid>
            </local:ContentControlX>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    Grid.Row="1"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Grid.Column="1"
                       Grid.Row="1"
                       MinWidth="0"
                       Width="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Orientation="Vertical"
                       ViewportSize="{TemplateBinding ViewportHeight}"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="CdFrozen"
                                      Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           Grid.Column="1"
                           MinHeight="0"
                           Height="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RowHeaderWidth,RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                         Value="0">
                <Setter TargetName="BtnSelectAll"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:DataGridHelper.IsVerticalScrollBarCrossingColumnHeaderPanel), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="PART_VerticalScrollBar"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="PART_VerticalScrollBar"
                        Property="Grid.RowSpan"
                        Value="2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:DataGridHelper.IsHorizontalScrollBarCrossingFrozenColumns), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="CdFrozen"
                        Property="Width"
                        Value="0" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ScrollViewerHelper.ScrollBarPosition), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="Inside" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsVerticalScrollBarCrossingColumnHeaderPanel), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcHeaderContainer"
                        Property="Grid.ColumnSpan"
                        Value="3" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.ColumnSpan"
                        Value="3" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.RowSpan"
                        Value="2" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ScrollViewerHelper.ScrollBarPosition), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="Inside" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsVerticalScrollBarCrossingColumnHeaderPanel), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcHeaderContainer"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.ColumnSpan"
                        Value="3" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.RowSpan"
                        Value="2" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ScrollViewerHelper.ScrollBarPosition), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="VerticalInside" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsVerticalScrollBarCrossingColumnHeaderPanel), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcHeaderContainer"
                        Property="Grid.ColumnSpan"
                        Value="3" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.ColumnSpan"
                        Value="3" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:ScrollViewerHelper.ScrollBarPosition), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="VerticalInside" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.IsVerticalScrollBarCrossingColumnHeaderPanel), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcHeaderContainer"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.ColumnSpan"
                        Value="3" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(local:ScrollViewerHelper.ScrollBarPosition), RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                         Value="HorizontalInside">
                <Setter TargetName="PART_ScrollContentPresenter"
                        Property="Grid.RowSpan"
                        Value="2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RowHeaderWidth, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                         Value="0">
                <Setter TargetName="RectVertical"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.DataGridTemplate}"
                     TargetType="DataGrid">
        <local:ContentControlX Background="{TemplateBinding Background}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{Binding Path=(local:DataGridHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <ScrollViewer Template="{StaticResource {x:Static irs:TemplateKeys.DataGridScrollViewerTemplate}}"
                          Focusable="False"
                          Padding="{TemplateBinding Padding}"
                          VerticalScrollBarVisibility="{Binding Path=(ScrollViewer.VerticalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          HorizontalScrollBarVisibility="{Binding Path=(ScrollViewer.HorizontalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          CanContentScroll="{Binding Path=(ScrollViewer.CanContentScroll),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <ItemsPresenter />
            </ScrollViewer>
        </local:ContentControlX>
    </ControlTemplate>

</ResourceDictionary>
