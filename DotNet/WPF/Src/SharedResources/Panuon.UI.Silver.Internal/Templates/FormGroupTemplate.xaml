<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.FormGroupVerticalTemplate}"
                     TargetType="local:FormGroup">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding InternalHeaderHeight, Converter={StaticResource {x:Static rs:ConverterKeys.DoubleToGridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <RowDefinition />
                <RowDefinition Height="{Binding MessageHeight, Converter={StaticResource {x:Static rs:ConverterKeys.DoubleToGridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               MinHeight="{Binding MinMessageHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               MaxHeight="{Binding MaxMessageHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid.RowDefinitions>
            <Border Width="{Binding InternalHeaderWidth, Mode=OneWay}">
                <ContentControl x:Name="PART_HeaderControl"
                                Focusable="False"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Foreground="{TemplateBinding HeaderForeground}"
                                Margin="{TemplateBinding HeaderPadding}"
                                VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" />
            </Border>
            <ContentPresenter x:Name="CpContent"
                              Grid.Row="1"
                              ContentSource="Content"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            <ContentControl x:Name="CcMessage"
                            Grid.Row="2"
                            Focusable="False"
                            Visibility="Collapsed"
                            Margin="{TemplateBinding HeaderPadding}"
                            Content="{TemplateBinding Message}"
                            ContentTemplate="{TemplateBinding MessageTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Message, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="CcMessage"
                        Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ValidateResult, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringUnequalConverter}}, ConverterParameter=None, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="CcMessage"
                        Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.FormGroupHorizontalTemplate}"
                     TargetType="local:FormGroup">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="{Binding MessageHeight, Converter={StaticResource {x:Static rs:ConverterKeys.DoubleToGridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               MinHeight="{Binding MinMessageHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               MaxHeight="{Binding MaxMessageHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding InternalHeaderWidth, Converter={StaticResource {x:Static rs:ConverterKeys.DoubleToGridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Height="{Binding InternalHeaderHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <ContentControl x:Name="PART_HeaderControl"
                                    Focusable="False"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Foreground="{TemplateBinding HeaderForeground}"
                                    Margin="{TemplateBinding HeaderPadding}"
                                    VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}" />
                </Border>
                <ContentPresenter x:Name="CpContent"
                                  Grid.Column="1"
                                  Grid.RowSpan="2"
                                  ContentSource="Content"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </Grid>
            <ContentControl x:Name="CcMessage"
                            Grid.Row="1"
                            Focusable="False"
                            Visibility="Collapsed"
                            Margin="{TemplateBinding HeaderPadding}"
                            Content="{TemplateBinding Message}"
                            ContentTemplate="{TemplateBinding MessageTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Message, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringNonnullAndNotEmptyConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="CcMessage"
                        Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ValidateResult, Converter={StaticResource {x:Static rs:ConverterKeys.IsStringUnequalConverter}}, ConverterParameter=None, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="True">
                <Setter TargetName="CcMessage"
                        Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
